
defaults: &defaults
  environment:
    - DEPENDENCIES_BASE_URL: "https://raw.githubusercontent.com/wireapp/wire-ios-shared-resources/circle2"
  macos:
    xcode: "9.0.1"


version: 2
jobs:

  dependencies:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        key: v2-{{ checksum "Cartfile.resolved" }}
    - restore_cache:
        key: v2-{{ checksum "Gemfile.lock" }}   
    - run: 
        name: "Get dependencies"
        command: |
          curl -O "${DEPENDENCIES_BASE_URL}/dependencies.sh"
          bash dependencies.sh
    - save_cache:
        key: v2-{{ checksum "Cartfile.resolved" }}
        paths: Carthage/Build
    - save_cache:
        key: v2-{{ checksum "Gemfile.lock" }}
        paths: ~/.gem

  build:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        key: v2-{{ checksum "Cartfile.resolved" }}
    - restore_cache:
        key: v2-{{ checksum "Gemfile.lock" }}   
    - run: 
        name: "Download scripts"
        command: |
          curl -O "${DEPENDENCIES_BASE_URL}/environment.sh"
          bash environment.sh
          curl -O "${DEPENDENCIES_BASE_URL}/build.sh"
    - run: 
        name: "Build"
        command: bash build.sh
    - save_cache:
        key: v1-{{ .Revision }}
        paths: DerivedData
    - store_artifacts:
        path: xcode_build.log


  test:
    <<: *defaults
    steps:
    - checkout
    - restore_cache:
        key: v2-{{ checksum "Cartfile.resolved" }}
    - restore_cache:
        key: v2-{{ checksum "Gemfile.lock" }}
    - restore_cache:
        key: v1-{{ .Revision }}
    - run: 
        name: "Download scripts"
        command: |
          curl -O "${DEPENDENCIES_BASE_URL}/environment.sh"
          bash environment.sh
          curl -O "${DEPENDENCIES_BASE_URL}/test.sh"
    - run: 
        name: "Test"
        command: bash test.sh
    - store_artifacts:
        path: xcode_build.log
    - store_artifacts:
        path: junit/tests.xml


# ----------------WORKFLOWS----------------
workflows:
  version: 2
  build-and-test:
    jobs:
      - dependencies
      - build:
          requires:
            - dependencies
      - test:
          requires:
            - build

